#All ranges/distances are in meters
obstacle_range: 2.5 #max range that obstacle will be detected and stored in map
raytrace_range: 3.0 #robot will attempt to clear out space in front of it up to this value away

#dimensions of square robot (x, y) -- center is assumed to be (0.0, 0.0)
footprint: [[0.305, 0.305], [-0.305, 0.305], [-0.305, -0.305], [0.305, -0.305]]

#Robot will treat paths that stay this distance or more away from obstacles as having equal obstacle cost
inflation_radius: 0.55

#defines a list of sensors that pass information to the costmap
observation_sources: laser_scan_sensor #point_cloud_sensor #pozyx_sensor

#Sensors from list above defined below

#sensor_frame = name of sensor coordinate frame
#data_type = depends on which message topic uses
#topic = name of topic sensor publishes data on
#marking = whether sensor will be used to add obstacle info to the costmap
#clearing = whether sensor will be used to clear obstacle info from the costmap
laser_scan_sensor: (sensor_frame: base_laser, data_type: LaserScan, topic: scan, marking: true, clearing: true)
#point_cloud_sensor: ()
#pozyx_sensor: ()